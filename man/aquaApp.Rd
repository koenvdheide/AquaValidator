% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/app.R
\name{aquaApp}
\alias{aquaApp}
\title{Just a wrapper for readxl's read_excel that includes some datatype casting for columns we expect to be in the file.}
\usage{
aquaApp(...)
}
\arguments{
\item{filePath}{URL to the Excel file.}

\item{sheet}{name or index of the Excel sheet to read in.}

\item{results}{Original (full) results dataframe.}

\item{n}{Maximum number of samples to return results for. So n = 10 means this returns the results of the 10 most recent samples.}

\item{full_results}{Dataframe containing the results we want the top n of.}

\item{table_data}{Dataframe that we want to present as a datatable.}

\item{dom}{Activates and sets the position of various datatable elements like the export buttons.}

\item{sort_by}{Datatables can start out already sorted by a given column. Which (if any) column should this be?}

\item{sort_direction}{Sort descending (default) with 'desc' or ascending with 'asc'.}

\item{comment_col}{Indicates whether there is a comment column. If TRUE it assumes the first column is for comments and makes it editable.}

\item{group}{FALSE means the datatable has no grouped rows, TRUE enables row grouping.}

\item{group_cols}{If grouping is enabled, which columns should we group rows by?}

\item{columnDefs}{A versatile option for setting a broad range of different attributes for columns. We generally use it to hide columns from view.}

\item{data}{dataframe to use for creating the plots.}

\item{x}{name of column (passed as string) to be used as x-axis.}

\item{y}{name of column (passed as string) to be used as y-axis.}

\item{current_data}{dataframe with results belonging to current samples, these results will be highlighted in the plots.}

\item{clicked_data}{dataframe with results belonging to points selected by the user, these results will also be highlighted.}

\item{facets}{name of column (passed as string) to split up the data by}

\item{shape}{name of column (passed as string) to be used as shape categories.}
}
\value{
a tibble as returned by read_excel.

Takes in sample results, creates a copy of these  results, attempts to calculate (currently) six different ratios per row (returning NA if a ratio is not applicable). Each of the six ratios is its own column.
The copied results dataframe is then wiped of all columns except NAAM, SAMPLINGDATE and the ratio columns. This trimmed copy is then pivoted along the ratios so that each ratio column value becomes its own row instead. This pivoted dataframe is then returned.

Same as results parameter.

Simple function that gets rows that are UITVALLEND (meaning they need validation right now) and returns their SAMPLE_ID and TESTCODE.

Same as results but with only SAMPLE_ID and TESTCODE columns.
Returns the results belonging to n most recent samples for each monsterpuntcode.
Nightmare code because we have to deal with three group layers, we want all the results (layer 1) of the n most recent samples (layer 2) for each meetpunt (layer 3).
Note that we get the 10 most recent labnummers (instead of sample id's) because sample id's are not necessarily incremental.

Same as full_results.

Just checks if currently selected samples have any ratios associated with them. After all, it's entirely possible to have a combination of test results that we don't calculate ratios for.

Boolean that's TRUE if currently selected samples have valid ratios, FALSE if not.
Hides the ratios plot object if there are no ratios to show.
This is needed because Shiny "reserves" space for each plot object even if that object is empty. Hiding the plot object this way clears up this space.

Nothing.
Writes the identifiers (like SAMPLE_ID) and comments of given samples and results to a .csv file.
This is intended to be used to export validated or rejected samples.

Boolean. TRUE if export succeeded, FALSE if not.
A wrapper for DT::datatable() that has sensible defaults for creating datatables and hides the convoluted syntax of some arguments.

DataTable as returned by DT::datatable()
Wrapper for ggplot() that creates plots with consistent settings such as theme, labels, font size etc.

ggplot object as created by ggplot().
}
\description{
Just a wrapper for readxl's read_excel that includes some datatype casting for columns we expect to be in the file.
}
